// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Generics.proto

#ifndef PROTOBUF_Generics_2eproto__INCLUDED
#define PROTOBUF_Generics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace opentxs {
namespace OTDB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Generics_2eproto();
void protobuf_AssignDesc_Generics_2eproto();
void protobuf_ShutdownFile_Generics_2eproto();

class String_InternalPB;
class KeyValue_InternalPB;
class StringMap_InternalPB;
class Blob_InternalPB;

// ===================================================================

class String_InternalPB : public ::google::protobuf::MessageLite {
 public:
  String_InternalPB();
  virtual ~String_InternalPB();

  String_InternalPB(const String_InternalPB& from);

  inline String_InternalPB& operator=(const String_InternalPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const String_InternalPB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const String_InternalPB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(String_InternalPB* other);

  // implements Message ----------------------------------------------

  String_InternalPB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const String_InternalPB& from);
  void MergeFrom(const String_InternalPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:opentxs.OTDB.String_InternalPB)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Generics_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Generics_2eproto();
  #endif
  friend void protobuf_AssignDesc_Generics_2eproto();
  friend void protobuf_ShutdownFile_Generics_2eproto();

  void InitAsDefaultInstance();
  static String_InternalPB* default_instance_;
};
// -------------------------------------------------------------------

class KeyValue_InternalPB : public ::google::protobuf::MessageLite {
 public:
  KeyValue_InternalPB();
  virtual ~KeyValue_InternalPB();

  KeyValue_InternalPB(const KeyValue_InternalPB& from);

  inline KeyValue_InternalPB& operator=(const KeyValue_InternalPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const KeyValue_InternalPB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const KeyValue_InternalPB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(KeyValue_InternalPB* other);

  // implements Message ----------------------------------------------

  KeyValue_InternalPB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const KeyValue_InternalPB& from);
  void MergeFrom(const KeyValue_InternalPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:opentxs.OTDB.KeyValue_InternalPB)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* value_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Generics_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Generics_2eproto();
  #endif
  friend void protobuf_AssignDesc_Generics_2eproto();
  friend void protobuf_ShutdownFile_Generics_2eproto();

  void InitAsDefaultInstance();
  static KeyValue_InternalPB* default_instance_;
};
// -------------------------------------------------------------------

class StringMap_InternalPB : public ::google::protobuf::MessageLite {
 public:
  StringMap_InternalPB();
  virtual ~StringMap_InternalPB();

  StringMap_InternalPB(const StringMap_InternalPB& from);

  inline StringMap_InternalPB& operator=(const StringMap_InternalPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const StringMap_InternalPB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StringMap_InternalPB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StringMap_InternalPB* other);

  // implements Message ----------------------------------------------

  StringMap_InternalPB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StringMap_InternalPB& from);
  void MergeFrom(const StringMap_InternalPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .opentxs.OTDB.KeyValue_InternalPB node = 1;
  inline int node_size() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 1;
  inline const ::opentxs::OTDB::KeyValue_InternalPB& node(int index) const;
  inline ::opentxs::OTDB::KeyValue_InternalPB* mutable_node(int index);
  inline ::opentxs::OTDB::KeyValue_InternalPB* add_node();
  inline const ::google::protobuf::RepeatedPtrField< ::opentxs::OTDB::KeyValue_InternalPB >&
      node() const;
  inline ::google::protobuf::RepeatedPtrField< ::opentxs::OTDB::KeyValue_InternalPB >*
      mutable_node();

  // @@protoc_insertion_point(class_scope:opentxs.OTDB.StringMap_InternalPB)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::opentxs::OTDB::KeyValue_InternalPB > node_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Generics_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Generics_2eproto();
  #endif
  friend void protobuf_AssignDesc_Generics_2eproto();
  friend void protobuf_ShutdownFile_Generics_2eproto();

  void InitAsDefaultInstance();
  static StringMap_InternalPB* default_instance_;
};
// -------------------------------------------------------------------

class Blob_InternalPB : public ::google::protobuf::MessageLite {
 public:
  Blob_InternalPB();
  virtual ~Blob_InternalPB();

  Blob_InternalPB(const Blob_InternalPB& from);

  inline Blob_InternalPB& operator=(const Blob_InternalPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Blob_InternalPB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Blob_InternalPB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Blob_InternalPB* other);

  // implements Message ----------------------------------------------

  Blob_InternalPB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Blob_InternalPB& from);
  void MergeFrom(const Blob_InternalPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:opentxs.OTDB.Blob_InternalPB)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Generics_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Generics_2eproto();
  #endif
  friend void protobuf_AssignDesc_Generics_2eproto();
  friend void protobuf_ShutdownFile_Generics_2eproto();

  void InitAsDefaultInstance();
  static Blob_InternalPB* default_instance_;
};
// ===================================================================


// ===================================================================

// String_InternalPB

// optional string value = 1;
inline bool String_InternalPB::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void String_InternalPB::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void String_InternalPB::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void String_InternalPB::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& String_InternalPB::value() const {
  // @@protoc_insertion_point(field_get:opentxs.OTDB.String_InternalPB.value)
  return *value_;
}
inline void String_InternalPB::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:opentxs.OTDB.String_InternalPB.value)
}
inline void String_InternalPB::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:opentxs.OTDB.String_InternalPB.value)
}
inline void String_InternalPB::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opentxs.OTDB.String_InternalPB.value)
}
inline ::std::string* String_InternalPB::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.OTDB.String_InternalPB.value)
  return value_;
}
inline ::std::string* String_InternalPB::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void String_InternalPB::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.OTDB.String_InternalPB.value)
}

// -------------------------------------------------------------------

// KeyValue_InternalPB

// optional string key = 1;
inline bool KeyValue_InternalPB::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue_InternalPB::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue_InternalPB::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue_InternalPB::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& KeyValue_InternalPB::key() const {
  // @@protoc_insertion_point(field_get:opentxs.OTDB.KeyValue_InternalPB.key)
  return *key_;
}
inline void KeyValue_InternalPB::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:opentxs.OTDB.KeyValue_InternalPB.key)
}
inline void KeyValue_InternalPB::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:opentxs.OTDB.KeyValue_InternalPB.key)
}
inline void KeyValue_InternalPB::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opentxs.OTDB.KeyValue_InternalPB.key)
}
inline ::std::string* KeyValue_InternalPB::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.OTDB.KeyValue_InternalPB.key)
  return key_;
}
inline ::std::string* KeyValue_InternalPB::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KeyValue_InternalPB::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.OTDB.KeyValue_InternalPB.key)
}

// optional string value = 2;
inline bool KeyValue_InternalPB::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue_InternalPB::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue_InternalPB::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue_InternalPB::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& KeyValue_InternalPB::value() const {
  // @@protoc_insertion_point(field_get:opentxs.OTDB.KeyValue_InternalPB.value)
  return *value_;
}
inline void KeyValue_InternalPB::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:opentxs.OTDB.KeyValue_InternalPB.value)
}
inline void KeyValue_InternalPB::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:opentxs.OTDB.KeyValue_InternalPB.value)
}
inline void KeyValue_InternalPB::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opentxs.OTDB.KeyValue_InternalPB.value)
}
inline ::std::string* KeyValue_InternalPB::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.OTDB.KeyValue_InternalPB.value)
  return value_;
}
inline ::std::string* KeyValue_InternalPB::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KeyValue_InternalPB::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.OTDB.KeyValue_InternalPB.value)
}

// -------------------------------------------------------------------

// StringMap_InternalPB

// repeated .opentxs.OTDB.KeyValue_InternalPB node = 1;
inline int StringMap_InternalPB::node_size() const {
  return node_.size();
}
inline void StringMap_InternalPB::clear_node() {
  node_.Clear();
}
inline const ::opentxs::OTDB::KeyValue_InternalPB& StringMap_InternalPB::node(int index) const {
  // @@protoc_insertion_point(field_get:opentxs.OTDB.StringMap_InternalPB.node)
  return node_.Get(index);
}
inline ::opentxs::OTDB::KeyValue_InternalPB* StringMap_InternalPB::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:opentxs.OTDB.StringMap_InternalPB.node)
  return node_.Mutable(index);
}
inline ::opentxs::OTDB::KeyValue_InternalPB* StringMap_InternalPB::add_node() {
  // @@protoc_insertion_point(field_add:opentxs.OTDB.StringMap_InternalPB.node)
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::opentxs::OTDB::KeyValue_InternalPB >&
StringMap_InternalPB::node() const {
  // @@protoc_insertion_point(field_list:opentxs.OTDB.StringMap_InternalPB.node)
  return node_;
}
inline ::google::protobuf::RepeatedPtrField< ::opentxs::OTDB::KeyValue_InternalPB >*
StringMap_InternalPB::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:opentxs.OTDB.StringMap_InternalPB.node)
  return &node_;
}

// -------------------------------------------------------------------

// Blob_InternalPB

// optional bytes value = 1;
inline bool Blob_InternalPB::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Blob_InternalPB::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Blob_InternalPB::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Blob_InternalPB::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& Blob_InternalPB::value() const {
  // @@protoc_insertion_point(field_get:opentxs.OTDB.Blob_InternalPB.value)
  return *value_;
}
inline void Blob_InternalPB::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:opentxs.OTDB.Blob_InternalPB.value)
}
inline void Blob_InternalPB::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:opentxs.OTDB.Blob_InternalPB.value)
}
inline void Blob_InternalPB::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:opentxs.OTDB.Blob_InternalPB.value)
}
inline ::std::string* Blob_InternalPB::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.OTDB.Blob_InternalPB.value)
  return value_;
}
inline ::std::string* Blob_InternalPB::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Blob_InternalPB::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.OTDB.Blob_InternalPB.value)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OTDB
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Generics_2eproto__INCLUDED
